using Core;
using Dapper;
using System.Collections.Generic;
using System.Data;
using System.Linq;


namespace persistence
{
    public class FacultyRepository : BaseRepository
    {
        public FacultyRepository(IDbConnection dbConnection) : base(dbConnection)
        {
        }

        public void Add(Faculty faculty)
        {
            const string query = @"
                                 INSERT INTO [cla].[dbo].[Faculties]
                                       ([FirstName]
                                       ,[LastName]
                                       ,[Designation]
                                       ,[Phone]
                                       ,[Email])
                                 VALUES
                                       (@FirstName
                                       ,@LastName
                                       ,@Designation
                                       ,@Phone
                                       ,@Email)";
            EnsureDbConnectionIsOpen();
            Connection.Query(query, faculty);
        }

        public void Delete(int facultyId)
        {
            const string query = @"DELETE FROM [cla].[dbo].[Faculties] WHERE Fid = @facultyId";
            EnsureDbConnectionIsOpen();
            Connection.Query(query, new { facultyId });
        }

        public void Update(Faculty faculty)
        {
            const string query = @"
                                    UPDATE [cla].[dbo].[Faculties]
                                       SET [FirstName] = @FirstName,
                                           [LastName] = @LastName, 
                                           [Designation] = @Designation, 
                                           [Phone] = @Phone,
                                           [Email] = @Email
                                     WHERE [FId] = @FId
                                    ";
            EnsureDbConnectionIsOpen();
            Connection.Query(query, faculty);
        }
        public IEnumerable<Faculty> GetAll()
        {
            const string query = @"
                                     SELECT [FId]
                                          ,[FirstName]
                                          ,[LastName]
                                          ,[Designation]
                                          ,[Phone]
                                          ,[Email]
                                      FROM [cla].[dbo].[Faculties]";
            EnsureDbConnectionIsOpen();
            return Connection.Query<Faculty>(query);
        }
        public Faculty Get(int facultyId)
        {
            const string query = @"
                                     SELECT [FId]
                                          ,[FirstName]
                                          ,[LastName]
                                          ,[Designation]
                                          ,[Phone]
                                          ,[Email]
                                      FROM [cla].[dbo].[Faculties]
                                        WHERE FId = @facultyId
                                    ";
            EnsureDbConnectionIsOpen();
            return Connection.Query<Faculty>(query, new { facultyId }).SingleOrDefault();
        }
        public string GetFacultyFullNameBy(int Fid)
        {
            var faculty = Get(Fid);
            return faculty.FirstName + " " + faculty.LastName;
        }
    }
}
